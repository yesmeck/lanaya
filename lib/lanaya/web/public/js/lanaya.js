// Generated by CoffeeScript 1.6.3
(function() {
  var Lanaya;

  Lanaya = (function() {
    function Lanaya() {
      this.initFoundation();
      this.bindEvents();
      this.refresh();
      this.subscribe();
    }

    Lanaya.prototype.initFoundation = function() {
      return $(window.document).foundation();
    };

    Lanaya.prototype.bindEvents = function() {
      var _this;
      _this = this;
      $(window.document).on('click', '.interaction', function(event) {
        var $content, interaction;
        interaction = $(this).data();
        _this.displayInterationDetail(interaction);
        $('#interaction-detail').data('session-id', interaction.session_id).show();
        $content = $('#interaction-detail .content');
        return $content.css('height', $content.outerHeight());
      });
      $('#interaction-detail .close').on('click', function(event) {
        return $('#interaction-detail').hide();
      });
      return $(window).on('resize', function() {
        var $content;
        $content = $('#interaction-detail .content');
        return $content.css('height', $content.outerHeight());
      });
    };

    Lanaya.prototype.displayInterationDetail = function(interaction) {
      var _this = this;
      this.displayInteractionHeaders(interaction);
      return $.get("/" + interaction.session_id + "/response_body", function(response) {
        _this.displayInteractionPreview(response);
        return _this.displayInteractionResponse(response);
      });
    };

    Lanaya.prototype.displayInteractionHeaders = function(interaction) {
      var html, tpl;
      tpl = "<div id=\"interation-summary\">\n  <ul>\n    <li><b>Request URL:</b> <%= interaction.request.uri %></li>\n    <li><b>Request Method:</b> <%= interaction.request.method %></li>\n    <li><b>Status Code:</b> <%= interaction.response.status_code %></li>\n    <li>\n      <b>Request Headers</b>\n      <ul>\n        <% _.each(interaction.request.headers, function(value, key) { %>\n          <li><b><%= key %>:</b> <%= value %></li>\n        <% }); %>\n      </ul>\n    </li>\n    <li>\n      <b>Reponse Headers</b>\n      <ul>\n        <% _.each(interaction.response.headers, function(value, key) { %>\n          <li><b><%= key %>:</b> <%= value %></li>\n        <% }); %>\n      </ul>\n    </li>\n  </ul>\n</div>";
      html = _.template(tpl)({
        interaction: interaction
      });
      return $('#interaction-detail #headers').html(html);
    };

    Lanaya.prototype.displayInteractionResponse = function(response) {
      if (response === '') {
        response = 'This request has no response data available.';
      }
      return $('#response').text(response);
    };

    Lanaya.prototype.displayInteractionPreview = function(response) {
      var $iframe, frameDoc, iframe;
      if (response === '') {
        response = 'This request has no response data available.';
        return $('#preview').html(response);
      } else {
        $iframe = $("<iframe></iframe>");
        $iframe.css({
          width: '100%',
          height: '100%'
        });
        $('#preview').html($iframe);
        iframe = $iframe[0];
        frameDoc = iframe.document;
        if (iframe.contentWindow) {
          frameDoc = iframe.contentWindow.document;
        }
        frameDoc.open();
        frameDoc.writeln(response);
        return frameDoc.close();
      }
    };

    Lanaya.prototype.subscribe = function() {
      if (typeof WebSocket !== "undefined" && WebSocket !== null) {
        return this.subscribeWebSocket();
      } else {
        return this.subscribePoll();
      }
    };

    Lanaya.prototype.subscribeWebSocket = function() {
      var secure, uri,
        _this = this;
      secure = window.location.scheme === 'https';
      uri = "" + (secure ? 'wss' : 'ws') + "://" + window.location.host + "/interactions";
      this.websocket = new WebSocket(uri);
      return this.websocket.onmessage = function(event) {
        return _this.addInteraction($.parseJSON(event.data));
      };
    };

    Lanaya.prototype.subscribePoll = function() {
      var _this = this;
      if (this.refreshInterval == null) {
        return this.refreshInterval = setInterval((function() {
          return _this.refresh();
        }), 1000);
      }
    };

    Lanaya.prototype.refresh = function() {
      var _this = this;
      return $.getJSON('/interactions', function(interactions) {
        return $.each(interactions, function(i, interaction) {
          if (!_this.haveInteraction(interaction)) {
            return _this.addInteraction(interaction);
          }
        });
      });
    };

    Lanaya.prototype.haveInteraction = function(interaction) {
      return $("#interaction-" + interaction.session_id).length > 0;
    };

    Lanaya.prototype.addInteraction = function(interaction) {
      var $html, html;
      console.log(interaction);
      html = "<tr id=\"interaction-" + interaction.session_id + "\" class=\"interaction\" >\n  <td>" + interaction.request.uri + "</td>\n  <td>" + interaction.request.method + "</td>\n  <td>" + interaction.response.status_code + "</td>\n  <td>" + interaction.response.content_type + "</td>\n  <td>" + interaction.response.content_length + "</td>\n  <td>" + interaction.requested_at + "</td>\n</tr>";
      $html = $(html).data(interaction);
      return $('#interactions table tbody').append($html);
    };

    return Lanaya;

  })();

  jQuery(function() {
    return window.Lanaya = new Lanaya;
  });

}).call(this);
